a20test:
    push    fs
    push    gs    
    xor     ax,     ax
    mov     fs,     ax
    not     ax
    mov     gs,     ax   

    push    word [fs:0x200] 
    mov     [fs:0x200], word 0x5555

    push    word [gs:0x210]
    mov     [gs:0x210], word 0xAAAA

    mov     ax,     [fs:0x200]
    and     ax,     [gs:0x210] ; ax = 0 if A20 is enabled, 0x5555 if disabled

    pop     word [gs:0x210]
    pop     word [fs:0x200]
    pop     gs
    pop     fs
    ret
    
  a20enable:
    in      al,     0x92
    test    al,     2
    jnz     .x
    or      al,     2
    and     al,     0xfe
    out     0x92,   al
  .x:    
    ret

  a20init:
    push    ax
		call		a20test
		or			ax,			ax
		jz		  .a20good
		call		a20enable	
		call		a20test
		or			ax,			ax
		mov			si,			A20_FAILED_ENABLING
		jnz			__halt
	.a20good:
    pop     ax
    ret
