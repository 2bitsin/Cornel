		cli
		mov		 	ax, 		cs
		mov 		ds,   	ax
		mov     es, 		ax

		xor			ax, 		ax
		mov     fs, 		ax
		mov     gs, 		ax

		mov     ax, 		STACK_BASE/16
		mov     ss, 		ax
		mov     sp,   	STACK_TOP

		call		coninit
		call		serinit
		call		dosinit
		call 		flatinit
		call		a20init	
		mov			ax,			__PSP / 16
		mov			ds,			ax
		mov			es,			ax
		lss			sp,			[cs:__stack]
		call		dword [cs:__entry]

		mov			si,			PROGRAM_TERMINATED
	__halt:	
		push		cs
		pop			ds		
		and			si, 		7
		shl			si,			2
		add			si, 		__PSP.errstr
		call		putstr
		mov			al,			13
		call		putchar
		mov			al,			10
		call		putchar
		mov			si,			__PSP.anykey
		call		putstr
		xor			ax,			ax
		int			0x16
		mov 		al, 		0xfe
		out 		0x64, 	al	
		cli
		hlt
